{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIHPresent\\\\legal-verse\\\\src\\\\page\\\\EL\\\\EL.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Heading from \"../../component/heading/Heading\";\nimport Form from \"../../component/form/Form\";\nimport './EL.scss';\n\n// Import your animated loading icon (e.g., SVG)\nimport loadingIcon from './loading.svg'; // Replace with your icon file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EL() {\n  _s();\n  const [inputValues, setInputValues] = useState({\n    inputValue1: '',\n    inputValue2: '',\n    inputValue3: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setInputValues(prevValue => ({\n      ...prevValue,\n      [id]: value\n    }));\n  };\n  const handleClick = e => {\n    e.preventDefault();\n\n    // Show loading icon\n    setIsLoading(true);\n\n    // Simulate a delay of 5 seconds\n    setTimeout(() => {\n      setIsLoading(false);\n      setShowPopup(true);\n    }, 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DocSimp\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      title: \"Document Review:Generate Summary\",\n      description: \"It provides a summary of your document by generating it in a simplified manner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      inp1: {\n        id: 'inputValue1',\n        type: 'text',\n        label: 'Legal Issue',\n        value: inputValues.inputValue1,\n        onChange: handleInputChange\n      },\n      inp2: {\n        id: 'inputValue2',\n        type: 'select',\n        label: 'Client Name',\n        value: inputValues.inputValue2,\n        onChange: handleInputChange,\n        options: ['Individual', 'Organization'] // Array of options\n      },\n\n      inp3: {\n        id: 'inputValue3',\n        type: 'textarea',\n        label: 'Description or other relevant details',\n        value: inputValues.inputValue3,\n        onChange: handleInputChange\n      },\n      onSubmit: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingIcon,\n        alt: \"Loading...\",\n        className: \"loading-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"EL-output\",\n        children: \"Your predefined text output goes here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: () => setShowPopup(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(EL, \"U9KSy0WmGeNyRdleR92/GffG7IA=\");\n_c = EL;\nexport default EL;\nvar _c;\n$RefreshReg$(_c, \"EL\");","map":{"version":3,"names":["React","useState","Heading","Form","loadingIcon","jsxDEV","_jsxDEV","EL","_s","inputValues","setInputValues","inputValue1","inputValue2","inputValue3","isLoading","setIsLoading","showPopup","setShowPopup","handleInputChange","e","id","value","target","prevValue","handleClick","preventDefault","setTimeout","className","children","title","description","fileName","_jsxFileName","lineNumber","columnNumber","inp1","type","label","onChange","inp2","options","inp3","onSubmit","src","alt","onClick","_c","$RefreshReg$"],"sources":["D:/SIHPresent/legal-verse/src/page/EL/EL.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Heading from \"../../component/heading/Heading\";\nimport Form from \"../../component/form/Form\";\nimport './EL.scss';\n\n// Import your animated loading icon (e.g., SVG)\nimport loadingIcon from './loading.svg'; // Replace with your icon file\n\nfunction EL() {\n  const [inputValues, setInputValues] = useState({\n    inputValue1: '',\n    inputValue2: '',\n    inputValue3: '',\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n\n  const handleInputChange = (e) => {\n    const { id, value } = e.target;\n    setInputValues((prevValue) => ({\n      ...prevValue,\n      [id]: value,\n    }));\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n\n    // Show loading icon\n    setIsLoading(true);\n\n    // Simulate a delay of 5 seconds\n    setTimeout(() => {\n      setIsLoading(false);\n      setShowPopup(true);\n    }, 5000);\n  };\n\n  return (\n    <div className='DocSimp'>\n      <Heading\n        title={\"Document Review:Generate Summary\"}\n        description={\"It provides a summary of your document by generating it in a simplified manner\"}\n      />\n      <Form\n        inp1={{\n          id: 'inputValue1',\n          type: 'text',\n          label: 'Legal Issue',\n          value: inputValues.inputValue1,\n          onChange: handleInputChange,\n        }}\n        inp2={{\n          id: 'inputValue2',\n          type: 'select',\n          label: 'Client Name',\n          value: inputValues.inputValue2,\n          onChange: handleInputChange,\n          options: ['Individual', 'Organization'], // Array of options\n        }}\n        inp3={{\n          id: 'inputValue3',\n          type: 'textarea',\n          label: 'Description or other relevant details',\n          value: inputValues.inputValue3,\n          onChange: handleInputChange,\n        }}\n        onSubmit={handleClick}\n      />\n\n      {/* Loading Icon */}\n      {isLoading && (\n        <div className=\"overlay\">\n          <img src={loadingIcon} alt=\"Loading...\" className=\"loading-icon\" />\n        </div>\n      )}\n\n      {/* Popup */}\n      {showPopup && (\n        <div className=\"popup\">\n          <p className='EL-output'>Your predefined text output goes here.</p>\n          <button className=\"close-button\" onClick={() => setShowPopup(false)}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default EL;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}